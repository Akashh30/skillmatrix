# version: '3.8'

# services:
#   postgres:
#     image: postgres:14-alpine
#     container_name: postgres
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: 123456
#       POSTGRES_DB: skillmatrix
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#       - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql

#   backend:
#     build:
#       context: ./server
#     container_name: backend
#     ports:
#       - "3000:3000"
#     environment:
#       DATABASE_URL: postgres://postgres:123456@postgres:5432/skillmatrix
#     depends_on:
#       - postgres

#   frontend:
#     build:
#       context: ./client
#     container_name: frontend
#     ports:
#       - "5173:5173"
#     depends_on:
#       - backend

# volumes:
#   postgres_data:

version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: skillmatrix
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "skillmatrix", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  backend:
    build:
      context: ./server
    container_name: backend
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://postgres:123456@postgres:5432/skillmatrix
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./client
    container_name: frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  postgres_data:
